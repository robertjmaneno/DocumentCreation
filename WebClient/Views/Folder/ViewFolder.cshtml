@model FolderContentsDto
@{
    ViewData["Title"] = "View Folder";
}

<h1>Folder Contents: @Model.Path</h1>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Folder")">Home</a></li>
        @{
            var pathParts = Model.Path.Split('/');
            var currentPath = "";
            for (int i = 0; i < pathParts.Length; i++)
            {
                currentPath += pathParts[i] + "/";
                if (i == pathParts.Length - 1)
                {
                    <li class="breadcrumb-item active" aria-current="page">@pathParts[i]</li>
                }
                else
                {
                    <li class="breadcrumb-item"><a href="@Url.Action("ViewFolder", "Folder", new { path = currentPath.TrimEnd('/') })">@pathParts[i]</a></li>
                }
            }
        }
    </ol>
</nav>

<div id="folder-contents">
    @foreach (var subfolder in Model.Subfolders)
    {
        <div class="folder" data-folder-id="@subfolder.Id">
            <a href="@Url.Action("ViewFolder", "Folder", new { path = subfolder.Path })" class="folder-link">
                <i class="fas fa-folder fa-3x"></i>
                <div class="folder-name">@subfolder.Name</div>
            </a>
        </div>
    }
    @foreach (var file in Model.Files)
    {
        <div class="file">
            <i class="fas fa-file fa-3x"></i>
            <div class="file-name">@file.Name</div>
        </div>
    }
</div>

<div class="mt-3">
    <button class="btn btn-primary create-subfolder-btn" data-parent-id="@Model.Id">Create Subfolder</button>
    <button class="btn btn-success upload-file-btn">Upload File</button>
</div>

<!-- Create Subfolder Modal -->
<div class="modal fade" id="create-folder-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Subfolder</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="create-folder-form">
                <div class="modal-body">
                    <input type="text" class="form-control" name="Name" placeholder="Enter folder name" required>
                    <input type="hidden" name="ParentId" id="parent-id-input">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- File Upload Form -->
<form id="upload-form" style="display: none;">
    <input type="file" name="file" id="file-input" />
    <input type="hidden" name="parentPath" value="@Model.Path" />
</form>

@section Styles {
    <style>
        .folder, .file {
            width: 120px;
            height: 120px;
            margin: 10px;
            text-align: center;
            cursor: pointer;
            display: inline-block;
            vertical-align: top;
        }

        .folder {
            background-color: #f8d775;
            border-radius: 10px;
            position: relative;
            overflow: hidden;
        }

            .folder:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 50%;
                height: 12px;
                background-color: #e0b94e;
                border-radius: 10px 10px 0 0;
            }

        .file {
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

            .folder i, .file i {
                font-size: 3em;
                margin-top: 20px;
            }

        .folder-name, .file-name {
            margin-top: 10px;
            word-wrap: break-word;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .folder-link {
            text-decoration: none;
            color: inherit;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle subfolder creation
            $('.create-subfolder-btn').click(function () {
                var parentId = $(this).data('parent-id');
                $('#parent-id-input').val(parentId);
                $('#create-folder-modal').modal('show');
            });

            // Handle folder creation
            $('#create-folder-form').submit(function (e) {
                e.preventDefault();
                var formData = {
                    Name: $('input[name="Name"]', this).val(),
                    ParentId: parseInt($('#parent-id-input').val())
                };

                $.ajax({
                    url: '@Url.Action("CreateFolder", "Folder")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error creating folder: ' + response.message);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("Error details:", jqXHR.responseText);
                        alert('An error occurred while creating the folder. Check console for details.');
                    }
                });
            });

            // Handle file upload
            $('.upload-file-btn').click(function () {
                $('#file-input').click();
            });

            $('#file-input').change(function () {
                var formData = new FormData($('#upload-form')[0]);
                $.ajax({
                    url: '@Url.Action("UploadDocument", "Folder")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error uploading file: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while uploading the file.');
                    }
                });
            });
        });
    </script>
}